pipeline {
    agent {
        node {
            label 'aws-ready'
            customWorkspace "${AM_ECS_DIRECTORY}"
        }
    }

    environment {
        ECS_CONTEXT_NAME = "am_aws"
        SECRET_ID = "dev/AM/utopia-secrets"
    }

    stages {
        stage('Load Environment') {
            steps {
                echo 'Loading Environment'
                script {
                    withCredentials([
                        string(credentialsId: env.SECRET_ID,
                        variable: 'DB_CREDS')
                    ]) {
                        def jsonObj = readJSON text: DB_CREDS
                        env.AWS_RDS_USERNAME    = jsonObj.DB_USERNAME
                        env.AWS_RDS_PASSWORD    = jsonObj.DB_PASSWORD
                        env.AWS_VPC_ID          = jsonObj.AWS_VPC_ID
                        env.AWS_RDS_ENDPOINT    = jsonObj.AWS_RDS_ENDPOINT
                        env.AWS_ALB_ID          = jsonObj.AWS_ALB_ID
                    }
                }
            }
        }

        stage('Configure') {
            steps {
                echo 'Configuring ECS'
                sh 'docker context use ${ECS_CONTEXT_NAME}'
                sh 'aws ecr get-login-password --region ${AWS_REGION_ID} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION_ID}.amazonaws.com'
            }
        }

        stage('Push ECS') {
            steps {
                echo 'Pushing Up to ECS'
                dir("am-ecs") {
                    sh 'docker compose up'
                }
            }
        }

        // end stages
    }
}

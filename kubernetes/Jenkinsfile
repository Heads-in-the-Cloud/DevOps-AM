pipeline {
    agent {
        node {
            label 'aws-ready'
            customWorkspace "${AM_DEVOPS_DIRECTORY}"
        }
    }

    environment {
        SECRET_ID = 'dev/AM/utopia-secrets'
        EKS_CLUSTER_NAME = 'AM-eks-cluster'
        EKS_SCRIPT_NAME = 'eks-init.sh'
    }

    stages {
        stage('Load Environment') {
            steps {
                echo 'Loading Environment'
                script {
                    withCredentials([
                        string(credentialsId: SECRET_ID,
                        variable: 'DB_CREDS')
                    ]) {
                        def jsonObj = readJSON text: DB_CREDS
                        env.AWS_RDS_USERNAME    = jsonObj.DB_USERNAME
                        env.AWS_RDS_PASSWORD    = jsonObj.DB_PASSWORD
                        env.AWS_RDS_ENDPOINT    = jsonObj.AWS_RDS_ENDPOINT
                    }
                }
            }
        }

        stage('Prepare Tools') {
            steps {
                echo 'Preparing EKS materials'
                sh 'docker context use default'
                sh 'aws eks --region ${AWS_REGION_ID} update-kubeconfig --name ${EKS_CLUSTER_NAME}'
                sh 'aws ecr get-login-password --region ${AWS_REGION_ID} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION_ID}.amazonaws.com'
            }
        }

        stage('Load Images') {
            steps {
                echo "Loading latest image hashes"
                dir("${AM_RESOURCES_DIRECTORY}") {
                    script {
                        env.USERS_API_LATEST = sh(script:'jq -Mr \'.users\' images.json', returnStdout: true)
                        env.BOOKINGS_API_LATEST = sh(script:'jq -Mr \'.bookings\' images.json', returnStdout: true)
                        env.FLIGHTS_API_LATEST = sh(script:'jq -Mr \'.flights\' images.json', returnStdout: true)
                        env.AUTH_API_LATEST = sh(script:'jq -Mr \'.auth\' images.json', returnStdout: true)
                    }
                }
            }
        }

        stage('Push EKS') {
            steps {
                echo 'Running Kubernetes Initialization'
                dir('kubernetes') {
                  sh 'chmod +x ${EKS_SCRIPT_NAME}'
                  sh './${EKS_SCRIPT_NAME}'
                }
            }
        }

        // end stages
    }
}
